    <chapt id="initramfs">
      <heading>Managing the initial ramfs (initramfs) archive</heading>
      <p>
        The booting in Debian is a two-stage process, involving
	the initial RAM filesystem (initramfs for short, sometimes it
	is also referred to as initrd, which stands for initial RAM
	disk). First, the bootloader loads the kernel and initramfs
	into memory, and passes the execution control to the
	kernel. After basic initialization the kernel extracts the
	initramfs archive and mounts it as a temporary root
	filesystem. initramfs contains kernel modules and userspace
	programs required to initialize the physical or logical
	device(s) containing the real root filesystem. The
	<tt>init</tt> script on the initramfs loads modules and
	performs other neccessary initialization steps. At the end of
	this stage <tt>run-init</tt> deletes the initramfs from
	memory, mounts the real root filesystem and passes control to
	the <tt>/sbin/init</tt> program on it.
      </p>
      <p>
        Two major goals are achieved with such setup: the kernel size
	is kept under control by allowing most of the drivers to be
	compiled as modules (in a initramfs-less setup the drivers
	neccessary for the boot-time initialization of the root device
	must be compiled into it) and allow the setups which require
	initialization which cannot be done in-kernel, but is performed
	by userspace utilities.
      </p>
      <sect id="initramfs-gen-tools">
        <heading>Initramfs generation tools</heading>
      <p>
        Since initramfs usually needs to be customized for the particular
	hardware/device configuration and kernel version, they are not
	included as a part of any package, but are generated on the
	fly at kernel installation time. Currently there are two tools
	in Debian, capable of creating an initramfs for kernels 2.6.13
	and newer: <tt>mkinitrd.yaird</tt> provided by the
	<tt>yaird</tt> package, and <tt>update-initramfs</tt> provided by
	<tt>initramfs-tools</tt> (default). The strategies these utilities use
	for initramfs creation are quite different. <tt>yaird</tt>
	performs a scan of the machine configuration at the kernel
	installation time and includes only the modules and programs
	which are required to initialize the device containing the
	real root filesystem. <tt>initramfs-tools</tt>, on the other hand,
	includes most of the controller drivers, as well as the tools
	to do automatic hardware detection from the initramfs during
	boot. The resulting initramfs is typically a few times larger
	than the one generated by <tt>yaird</tt>, however it comes with a
	greater flexibility. For example, a disk containing a kernel
	and initramfs generated by <tt>initramfs-tools</tt> may be moved
	to another partition or machine and is likely to successfully
        boot there (attached to a different disk controller, let's say),
	than the one containing a <tt>yaird</tt>-generated initramfs. A
	detailed comparison of the features of two package is
	available on the <url id="http://wiki.debian.org" name="Debian
	Wiki"> page <url
	id="http://wiki.debian.org/InitrdReplacementOptions"
	name="InitrdReplacementOptions">. You can also consult the
	manual pages of the individual tools by runnning the commands
	<tt>man mkinitrd.yaird</tt> and <tt>man update-initramfs</tt>.
      </p>
      </sect>
      <sect id="initramfs-gen-process">
        <heading>Choosing the tool</heading>
      <p>
	At the end of the kernel package installation a script is
	automatically invoked to determine the availability of the
	initramfs-generating tools and run one of them. This script
	contains the list of all such tools available in Debian.
	If the tool is installed (and the dependencies of
	the <tt>linux-image</tt> package ensure that at least one of
	them is installed), it will be queried (by running it with
	<tt>--supported-host-version</tt> and
	<tt>--supported-target-version</tt>) to determine whether it
	can be used to generate the initramfs for the new kernel version
	when running on a system with a current kernel version.  The
	first tool which is found to satisfy the criteria is going to
	be invoked, generating the new initramfs image and placing it
	into <tt>/boot</tt> directory. See the documentation of the
	individual tools for the supported ranges of kernel versions.
      </p>
      <p>
        The list of tools to be considered and the order in which they
	are tested may be controlled by placing a space-separated list
	of the executables into the <tt>ramdisk</tt> variable in
	<tt>/etc/kernel-img.conf</tt>.
      </p>
      </sect>
      <sect id="initramfs-regen">
        <heading>Regenerating the initramfs</heading>
      <p>
        The <tt>ramdisk</tt> setting mentioned above will only take
	effect when implemented <em>before</em> the kernel image
	installation. If the changes are desired after the corresponding
	<tt>linux-image</tt> has been installed, the initramfs needs to
	be regenerated. This is achieved by the command
	<example>
# dpkg-reconfigure linux-image-2.6.18-3-686
        </example>
        where <tt>linux-image-2.6.18-3-686</tt> is the name of the
	kernel package for which the initramfs regeneration is requested.
      </sect>
      <sect id="initramfs-exam">
        <heading>Examining the initramfs contents</heading>
	<p>
	Occasionally it is useful to examine the contents of initramfs
	to diagnose a problem or for educational purposes. They are
	compressed <tt>cpio</tt> archives, which may be extracted
	using the command
	<example>
$ zcat /boot/initrd.img-2.6.18-3-686 | cpio -i
        </example>
	It will unpack the contents of the initramfs into the current directory.
      </sect>
    </chapt>
